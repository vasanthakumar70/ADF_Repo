{
	"name": "incremental-multiple table",
	"properties": {
		"activities": [
			{
				"name": "Listoftables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select * from Listoftables",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Onprimesed",
						"type": "DatasetReference",
						"parameters": {
							"table": "Listoftables"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Listoftables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Listoftables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[InsertWatermarkValue]",
								"storedProcedureParameters": {
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									},
									"Timestamp": {
										"value": {
											"value": "@activity('current').output.firstRow.currenttime",
											"type": "Expression"
										},
										"type": "Datetime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "SqlServer1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "current",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "lastupdate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "\nselect * from @{item().TableName}\nwhere CreatedDate between cast('@{activity('lastupdate').output.firstRow.lastruntime}' as DATETIME) and cast('@{activity('current').output.firstRow.currenttime}' as DATETIME)\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 4,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Onprimesed",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@item().Tablename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Parquet1",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@concat(item().TableName,'/Increment load-',formatDateTime(utcNow(),'yyyy-MM-dd_HHmmss'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "current",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "select GETDATE() as currenttime",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "Onprimesed",
									"type": "DatasetReference",
									"parameters": {
										"table": "current"
									}
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "lastupdate",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select TableName,isnull(max(WatermarkValue),'2010-01-01 00:00:00.000') as lastruntime from watermarktable\nwhere TableName='@{item().Tablename}'\ngroup by TableName",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "Onprimesed",
									"type": "DatasetReference",
									"parameters": {
										"table": "watermarktable"
									}
								},
								"firstRowOnly": true
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2024-12-20T09:42:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}